[tool.black]
line-length = 120
target-version = ['py38']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.git         # exclude a few common directories in the
    | \.mypy_cache  # root of the project
    | \.pytest_cache
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.poetry]
name = "pinecone"
version = "5.2.0"
packages = [
    { include="pinecone", from="." },
]
description = "Pinecone client and SDK"
authors = ["Pinecone Systems, Inc. <support@pinecone.io>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://www.pinecone.io"
documentation = "https://pinecone.io/docs"
keywords = ["Pinecone", "vector", "database", "cloud"]
classifiers=[
        "License :: OSI Approved :: Apache Software License",
        "Development Status :: 5 - Production/Stable",
        "Intended Audience :: Developers",
        "Intended Audience :: Information Technology",
        "Intended Audience :: Science/Research",
        "Intended Audience :: System Administrators",
        "Operating System :: OS Independent",
        "Programming Language :: Python :: 3.8",
        "Programming Language :: Python :: 3.9",
        "Programming Language :: Python :: 3.10",
        "Programming Language :: Python :: 3.11",
        "Programming Language :: Python :: 3.12",
        "Topic :: Database",
        "Topic :: Software Development",
        "Topic :: Software Development :: Libraries",
        "Topic :: Software Development :: Libraries :: Application Frameworks",
        "Topic :: Software Development :: Libraries :: Python Modules"
]

[tool.poetry.dependencies]
python = "^3.8"
typing-extensions = ">=3.7.4"
urllib3 = [
  { version = ">=1.26.0", python = ">=3.8,<3.12" },
  { version = ">=1.26.5", python = "^3.12" }
]
tqdm = ">=4.64.1"
# certifi does not follow semver. Should always be 
# on latest but setting a broad range to have maximum
# compatibility with libraries that may pin version.
certifi = ">=2019.11.17"
grpcio = [
  { version = ">=1.44.0", optional = true, python = "^3.8,<3.11" },
  { version = ">=1.59.0", optional = true, python = "^3.11" }
]
googleapis-common-protos = { version = ">=1.53.0", optional = true }
lz4 = { version = ">=3.1.3", optional = true }
protobuf = { version = "^4.25", optional = true }
protoc-gen-openapiv2 = {version = "^0.0.1", optional = true }
pinecone-plugin-interface = "^0.0.7"
pinecone-plugin-inference = "^1.1.0"

[tool.poetry.group.types]
optional = true

[tool.poetry.group.types.dependencies]
mypy = "^1.6.1"
types-urllib3 = "^1.26.25.14"
grpc-stubs = "^1.53.0.3"
pandas-stubs = [
    {version = "^2.1.1.230928", python = ">=3.9"},
    {version = "^1.5.3.230321", python = ">=3.8,<3.9"}
]
types-tqdm = "^4.66.0.3"
types-protobuf = "^4.24.0.4"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.0.0"
numpy = [
  { version = ">=1.22", python = ">=3.9" },
  { version = ">=1.21", python = ">=3.8,<3.9" },
]
pandas = ">=1.3.5"
pdoc = "^14.1.0"
pytest = "8.0.0"
pytest-asyncio = "0.15.1"
pytest-cov = "2.10.1"
pytest-mock = "3.6.1"
pytest-timeout = "2.2.0"
urllib3_mock = "0.3.3"
responses = ">=0.8.1"
black = "^24.4.2"

[tool.poetry.extras]
grpc = ["grpcio", "googleapis-common-protos", "lz4", "protobuf", "protoc-gen-openapiv2"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
