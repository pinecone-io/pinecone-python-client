name: "Integration Tests"
'on':
  workflow_call: {}

jobs:

  inference:
    name: Inference tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: [3.9, 3.12]
    steps:
      - uses: actions/checkout@v4
      - name: 'Set up Python ${{ matrix.python_version }}'
        uses: actions/setup-python@v5
        with:
          python-version: '${{ matrix.python_version }}'
      - name: Setup Poetry
        uses: ./.github/actions/setup-poetry
        with:
          include_asyncio: true
      - name: 'Run integration tests'
        run: poetry run pytest tests/integration/inference --retries 5 --retry-delay 35 -s -vv --log-cli-level=DEBUG
        env:
          PINECONE_DEBUG_CURL: 'true'
          PINECONE_API_KEY: '${{ secrets.PINECONE_API_KEY }}'


  dependency-test-asyncio:
    uses: './.github/workflows/testing-integration-asyncio.yaml'
    secrets: inherit
    needs: inference

  db-data-serverless:
    name: db_data rest
    runs-on: ubuntu-latest
    needs:
      - inference
    strategy:
      fail-fast: false
      matrix:
        python_version:
          - 3.9
          - 3.13
        use_grpc: [true, false]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/test-data-plane
        with:
          python_version: '${{ matrix.python_version }}'
          use_grpc: '${{ matrix.use_grpc }}'
          metric: 'cosine'
          spec: '{ "serverless": { "region": "us-west-2", "cloud": "aws" }}'
          PINECONE_API_KEY: '${{ secrets.PINECONE_API_KEY }}'
          freshness_timeout_seconds: 600
          skip_weird_id_tests: 'true'

  # db-control-rest-pod:
  #   name: db_control pod/collection tests
  #   runs-on: ubuntu-latest
  #   needs:
  #     - inference
  #   strategy:
  #     matrix:
  #       testConfig:
  #         - python-version: 3.9
  #           pod: { environment: 'us-east1-gcp'}
  #         - python-version: 3.13
  #           pod: { environment: 'us-east1-gcp'}
  #     fail-fast: false
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: 'Set up Python ${{ matrix.testConfig.python-version }}'
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: '${{ matrix.testConfig.python-version }}'
  #     - name: Setup Poetry
  #       uses: ./.github/actions/setup-poetry
  #       with:
  #         include_asyncio: true
  #     - name: 'Run integration tests (REST)'
  #       run: poetry run pytest tests/integration/control/pod -s -v
  #       env:
  #         PINECONE_DEBUG_CURL: 'true'
  #         PINECONE_API_KEY: '${{ secrets.PINECONE_API_KEY }}'
  #         PINECONE_ENVIRONMENT: '${{ matrix.testConfig.pod.environment }}'
  #         GITHUB_BUILD_NUMBER: '${{ github.run_number }}-s-${{ matrix.testConfig.python-version}}'
  #         DIMENSION: 10
  #         METRIC: 'cosine'

  db-control-rest-serverless:
    name: db_control serverless
    runs-on: ubuntu-latest
    needs:
      - inference
    strategy:
      matrix:
        testConfig:
          - python-version: 3.9 # Do one test run with 3.9 for sanity check
            pod: { environment: 'us-east1-gcp'}
            serverless: { cloud: 'aws', region: 'us-west-2'}
          - python-version: 3.13
            pod: { environment: 'us-east1-gcp'}
            serverless: { cloud: 'aws', region: 'us-west-2'}
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: 'Set up Python ${{ matrix.testConfig.python-version }}'
        uses: actions/setup-python@v5
        with:
          python-version: '${{ matrix.testConfig.python-version }}'
      - name: Setup Poetry
        uses: ./.github/actions/setup-poetry
      - name: 'Run integration tests (REST)'
        run: poetry run pytest tests/integration/control/serverless --retries 5 --retry-delay 35 -s -vv --log-cli-level=DEBUG
        env:
          PINECONE_DEBUG_CURL: 'true'
          PINECONE_API_KEY: '${{ secrets.PINECONE_API_KEY }}'
          SERVERLESS_CLOUD: '${{ matrix.testConfig.serverless.cloud }}'
          SERVERLESS_REGION: '${{ matrix.testConfig.serverless.region }}'
