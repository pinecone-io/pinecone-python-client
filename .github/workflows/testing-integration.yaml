name: "Integration Tests"
on:
  workflow_call:
    inputs:
      encrypted_project_api_key:
        required: true
        type: string

env:
  PINECONE_ADDITIONAL_HEADERS: '{"sdk-test-suite": "pinecone-python-client"}'

jobs:
  db-control:
    name: Resource ${{ matrix.test_suite }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        python_version:
          - 3.9
        test_suite:
          - control/serverless
          - control/resources/index
          - control/resources/collections
          - control/resources/backup
          - control/resources/restore_job
          - control_asyncio/resources/index
          - control_asyncio/resources/backup
          - control_asyncio/resources/restore_job
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/decrypt-secret
        id: decrypt-api-key
        with:
          encrypted_secret: '${{ inputs.encrypted_project_api_key }}'
          encryption_key: '${{ secrets.FERNET_ENCRYPTION_KEY }}'
      - name: 'Set up Python ${{ matrix.python_version }}'
        uses: actions/setup-python@v5
        with:
          python-version: '${{ matrix.python_version }}'
      - name: Setup Poetry
        uses: ./.github/actions/setup-poetry
        with:
          include_asyncio: true
      - name: 'Run tests'
        run: poetry run pytest tests/integration/${{ matrix.test_suite }} --retries 2 --retry-delay 35 -s -vv --log-cli-level=DEBUG
        env:
          PINECONE_API_KEY: '${{ steps.decrypt-api-key.outputs.decrypted_secret }}'

  inference:
    name: Inference tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version:
          - 3.9
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/decrypt-secret
        id: decrypt-api-key
        with:
          encrypted_secret: '${{ inputs.encrypted_project_api_key }}'
          encryption_key: '${{ secrets.FERNET_ENCRYPTION_KEY }}'
      - name: 'Set up Python ${{ matrix.python_version }}'
        uses: actions/setup-python@v5
        with:
          python-version: '${{ matrix.python_version }}'
      - name: Setup Poetry
        uses: ./.github/actions/setup-poetry
        with:
          include_asyncio: true
      - name: 'Run integration tests'
        run: poetry run pytest tests/integration/inference --retries 2 --retry-delay 35 -s -vv --log-cli-level=DEBUG
        env:
          PINECONE_API_KEY: '${{ steps.decrypt-api-key.outputs.decrypted_secret }}'

  plugins:
    name: Plugin installation
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: [3.9, 3.12]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/decrypt-secret
        id: decrypt-api-key
        with:
          encrypted_secret: '${{ inputs.encrypted_project_api_key }}'
          encryption_key: '${{ secrets.FERNET_ENCRYPTION_KEY }}'
      - name: 'Set up Python ${{ matrix.python_version }}'
        uses: actions/setup-python@v5
        with:
          python-version: '${{ matrix.python_version }}'
      - name: Setup Poetry
        uses: ./.github/actions/setup-poetry
        with:
          include_asyncio: true
      - name: 'Run integration tests'
        run: poetry run pytest tests/integration/plugins --retries 2 --retry-delay 35 -s -vv --log-cli-level=DEBUG
        env:
          PINECONE_API_KEY: '${{ steps.decrypt-api-key.outputs.decrypted_secret }}'


  integration-test-asyncio:
    uses: './.github/workflows/testing-integration-asyncio.yaml'
    secrets: inherit
    needs: inference
    with:
      encrypted_project_api_key: ${{ inputs.encrypted_project_api_key }}

  db-data-serverless:
    name: db_data rest
    runs-on: ubuntu-latest
    needs:
      - inference
      - plugins
    strategy:
      fail-fast: false
      matrix:
        python_version:
          - 3.9
          - 3.13
        use_grpc: [true, false]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/decrypt-secret
        id: decrypt-api-key
        with:
          encrypted_secret: '${{ inputs.encrypted_project_api_key }}'
          encryption_key: '${{ secrets.FERNET_ENCRYPTION_KEY }}'
      - uses: ./.github/actions/test-data-plane
        with:
          python_version: '${{ matrix.python_version }}'
          use_grpc: '${{ matrix.use_grpc }}'
          metric: 'cosine'
          spec: '{ "serverless": { "region": "us-west-2", "cloud": "aws" }}'
          freshness_timeout_seconds: 600
          skip_weird_id_tests: 'true'
          PINECONE_API_KEY: '${{ steps.decrypt-api-key.outputs.decrypted_secret }}'
          PINECONE_ADDITIONAL_HEADERS: '${{ env.PINECONE_ADDITIONAL_HEADERS }}'
