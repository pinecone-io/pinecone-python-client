name: Testing

on:
  workflow_call: {}


jobs:
  units-no-grpc:
    name: Unit tests (REST)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', 3.11]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup Poetry
        uses: ./.github/actions/setup-poetry

      - name: Run unit tests
        run: poetry run pytest --cov=pinecone --timeout=120 tests/unit
      
      - name: mypy check
        run: |
          # Still lots of errors when running on the whole package (especially
          # in the generated core module), but we can check these subpackages
          # so we don't add new regressions.
          poetry run mypy pinecone --exclude pinecone/core --exclude pinecone/grpc

  integration-rest:
    name: Integration tests (REST)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pineconeEnv:
          - prod
          # - staging
        testConfig:
          - python-version: 3.8 # Do one test run with 3.8 for sanity check
            pod: { environment: 'us-east1-gcp'}
            serverless: { cloud: 'aws', region: 'us-west-2'}
          - python-version: 3.11
            pod: { environment: 'us-east1-gcp'}
            serverless: { cloud: 'aws', region: 'us-west-2'}
      max-parallel: 1
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.testConfig.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.testConfig.python-version }}

      - name: Setup Poetry
        uses: ./.github/actions/setup-poetry

      - name: Run integration tests (REST, prod)
        if: matrix.pineconeEnv == 'prod'
        run: poetry run pytest tests/integration -s -v
        env:
          PINECONE_CONTROLLER_HOST: 'https://api.pinecone.io'
          PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
          GITHUB_BUILD_NUMBER: "${{ github.run_number }}-p-${{ matrix.python-version}}"
          POD_ENVIRONMENT: ${{ matrix.testConfig.pod.environment }}
          SERVERLESS_CLOUD: ${{ matrix.testConfig.serverless.cloud }}
          SERVERLESS_REGION: ${{ matrix.testConfig.serverless.region }}

      - name: Run integration tests (REST, staging)
        if: matrix.pineconeEnv == 'staging'
        run: poetry run pytest tests/integration -s -v
        env:
          PINECONE_CONTROLLER_HOST: 'https://api-staging.pinecone.io'
          PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY_STAGING }}
          GITHUB_BUILD_NUMBER: "${{ github.run_number }}-s-${{ matrix.python-version}}"
          POD_ENVIRONMENT: ${{ matrix.testConfig.pod.environment }}
          SERVERLESS_CLOUD: ${{ matrix.testConfig.serverless.cloud }}
          SERVERLESS_REGION: ${{ matrix.testConfig.serverless.region }}

  units-grpc:
    name: Unit tests (GRPC)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', 3.11]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup Poetry
        uses: ./.github/actions/setup-poetry
        with:
          include_grpc: true

      - name: Run unit tests (GRPC)
        run: poetry run pytest --cov=pinecone --timeout=120 tests/unit_grpc

      - name: mypy check
        run: |
          # Still lots of errors when running on the whole package (especially
          # in the generated core module), but we can check these subpackages
          # so we don't add new regressions.
          poetry run mypy pinecone --exclude pinecone/core

  package:
    name: Check packaging
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', 3.11]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup Poetry
        uses: ./.github/actions/setup-poetry

      - name: Package
        run: poetry build

  dependency-matrix-rest:
    # The dependency matrix is used to test the compatibility of the 
    # SDK with different dependency versions customers might use.
    # The test itself is a single integration test that creates an index,
    # adds a few vectors, and runs one query.
    name: Deps (REST)
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      fail-fast: false
      matrix:
        python-version:
          - 3.8
          - 3.9
          - "3.10"
          - 3.11
          # Poetry doesn't yet work with 3.12 & 3.13
          # - 3.12
          # - 3.13
        urllib3-version:
          - 1.26.16
          - 1.26.18
          - 2.0.2
          - 2.0.5
          - 2.1.0
          # - 1.26.17
          # - 2.0.3
          # - 2.0.4
          # - 2.0.6
          # - 2.0.7
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup Poetry
        uses: ./.github/actions/setup-poetry
        with:
          include_grpc: false
          include_types: false

      - name: Install urllib3 ${{ matrix.urllib3-version }}
        run: poetry add urllib3==${{ matrix.urllib3-version }}

      - uses: nick-fields/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 3
          retry_on: error
          command: poetry run pytest tests/dependency/rest -s -v
        env:
          PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
  
  dependency-matrix-grpc:
    # The dependency matrix is used to test the compatibility of the 
    # SDK with different dependency versions customers might use.
    # The test itself is a single integration test that creates an index,
    # adds a few vectors, and runs one query.
    name: Deps (GRPC)
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      fail-fast: false
      matrix:
        python-version:
          - 3.8
          # - 3.9
          # - "3.10"
          # - 3.11
        grpcio-version:
          - 1.44.0
          # - 1.46.5
          # - 1.47.5
          # - 1.48.2
          # - 1.49.1
          - 1.50.0
          # - 1.51.3
          # - 1.53.2
          # - 1.54.3
          # - 1.55.3
          - 1.56.2
          # - 1.57.0
          # - 1.58.0
          # - 1.59.3
          - 1.60.0

        lz4-version:
          - 3.1.3
          # - 3.1.10
          - 4.0.0
          # - 4.0.1
          # - 4.1.0
          - 4.3.3
        protobuf-version:
          - 3.20.0
        googleapis-common-protos-version:
          - 1.53.0
          - 1.62.0
        grpc-gateway-protoc-gen-openapiv2-version:
          - 0.1.0

          # grpcio = { version = ">=1.44.0", optional = true }
          # grpc-gateway-protoc-gen-openapiv2 = { version = "0.1.0", optional = true }
          # googleapis-common-protos = { version = ">=1.53.0", optional = true }
          # lz4 = { version = ">=3.1.3", optional = true }
          # protobuf = { version = "~=3.20.0", optional = true }
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup Poetry
        uses: ./.github/actions/setup-poetry
        with:
          include_grpc: false
          include_types: false

      - name: Install urllib3 ${{ matrix.grpcio-version }}
        run: poetry add urllib3==${{ matrix.grpcio-version }}
      
      - name: Install lz4 ${{ matrix.lz4-version }}
        run: poetry add lz4==${{ matrix.lz4-version }}

      - name: Install protobuf ${{ matrix.protobuf-version }}
        run: poetry add protobuf==${{ matrix.protobuf-version }}

      - name: Install googleapis-common-protos ${{ matrix.googleapis-common-protos-version }}
        run: poetry add googleapis-common-protos==${{ matrix.googleapis-common-protos-version }}

      - uses: nick-fields/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 3
          retry_on: error
          command: poetry run pytest tests/dependency/grpc -s -v
        env:
          PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
