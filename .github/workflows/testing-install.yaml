name: Installation Tests

on:
  workflow_call:
  workflow_dispatch:
  pull_request:

permissions:
  contents: read
  pull-requests: write

jobs:
  test-install-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [3.9, 3.10, 3.11, 3.12, 3.13]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip setuptools wheel build

      - name: Build sdist & wheel
        run: python -m build --sdist --wheel

      - name: Install from built artifacts
        shell: bash
        run: |
          pip install dist/*.whl || pip install dist/*.tar.gz

      - name: Verify import & version
        run: |
          python - <<EOF
          import pinecone
          print("Imported OK, version:", pinecone.__version__)
          EOF

  test-install-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python: [3.9, 3.10, 3.11, 3.12, 3.13]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip setuptools wheel build

      - name: Build sdist & wheel
        run: python -m build --sdist --wheel

      - name: Install from built artifacts
        shell: pwsh
        run: |
          $wheels = Get-ChildItem -Path "dist" -Filter "*.whl"
          $sdists = Get-ChildItem -Path "dist" -Filter "*.tar.gz"
          if ($wheels) {
              pip install $wheels[0].FullName
          }
          elseif ($sdists) {
              pip install $sdists[0].FullName
          }
          else {
              throw "No wheel or sdist found in dist/"
          }

      - name: Verify import & version
        shell: pwsh
        run: |
          python -c "import pinecone; print('Imported OK, version:', pinecone.__version__)"
