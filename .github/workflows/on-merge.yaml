name: Testing (main)

on:
  pull_request:
  push:
    branches:
      - main
      - release-candidate/*
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '*.rst'
      - '*.txt'
      - '*.html'
      - '*.css'
      - '*.js'
      - '*.png'
      - '*.jpg'
      - '*.jpeg'
      - '*.gif'
      - '*.svg'
      - '*.example'
  workflow_dispatch: {}

permissions: {}

concurrency:
  group: 'ci-${{ github.workflow }}-${{ github.ref }}'
  cancel-in-progress: true

jobs:
  linting:
    uses: './.github/workflows/testing-lint.yaml'

  unit-tests:
    uses: './.github/workflows/testing-unit.yaml'
    secrets: inherit

  create-project:
    runs-on: ubuntu-latest
    needs:
      - unit-tests
    outputs:
      encrypted_project_api_key: ${{ steps.create-project-step.outputs.encrypted_project_api_key }}
      project_id: ${{ steps.create-project-step.outputs.project_id }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/create-project
        id: create-project-step
        with:
          PINECONE_SERVICE_ACCOUNT_CLIENT_ID: '${{ secrets.PINECONE_SERVICE_ACCOUNT_CLIENT_ID }}'
          PINECONE_SERVICE_ACCOUNT_CLIENT_SECRET: '${{ secrets.PINECONE_SERVICE_ACCOUNT_CLIENT_SECRET }}'
          FERNET_ENCRYPTION_KEY: '${{ secrets.FERNET_ENCRYPTION_KEY }}'
          api_version: '2025-04'
          name_prefix: 'python'
          max_pods: 10

  integration-tests:
      uses: './.github/workflows/testing-integration.yaml'
      secrets: inherit
      needs:
        - unit-tests
        - create-project
      with:
        encrypted_project_api_key: ${{ needs.create-project.outputs.encrypted_project_api_key }}

  dependency-tests:
    uses: './.github/workflows/testing-dependency.yaml'
    secrets: inherit
    needs:
      - unit-tests
      - create-project
    with:
      encrypted_project_api_key: ${{ needs.create-project.outputs.encrypted_project_api_key }}

  install-tests:
    uses: './.github/workflows/testing-install.yaml'
    secrets: inherit
    needs:
      - unit-tests
      - create-project

  cleanup-project:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    timeout-minutes: 30
    needs:
      - create-project
      - integration-tests
      - dependency-tests
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/delete-project
        with:
          FERNET_ENCRYPTION_KEY: '${{ secrets.FERNET_ENCRYPTION_KEY }}'
          PINECONE_SERVICE_ACCOUNT_CLIENT_ID: '${{ secrets.PINECONE_SERVICE_ACCOUNT_CLIENT_ID }}'
          PINECONE_SERVICE_ACCOUNT_CLIENT_SECRET: '${{ secrets.PINECONE_SERVICE_ACCOUNT_CLIENT_SECRET }}'
          api_version: '2025-04'
          project_id: ${{ needs.create-project.outputs.project_id }}
          encrypted_project_api_key: ${{ needs.create-project.outputs.encrypted_project_api_key }}

  package:
    name: Check packaging
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.13]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Poetry
        uses: ./.github/actions/setup-poetry
        with:
          python_version: ${{ matrix.python-version }}
      - name: Package
        run: poetry build

  build-docs:
    name: Build docs with pdoc
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build docs with pdoc
        uses: './.github/actions/build-docs'
        with:
          python-version: 3.11
