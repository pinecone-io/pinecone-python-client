name: 'Test Data Plane'
description: 'Runs tests on the Pinecone data plane'

inputs:
  metric:
    description: 'The metric of the index'
    required: true
  dimension:
    description: 'The dimension of the index'
    required: true
  host:
    description: 'The host of the index'
    required: true
  use_grpc:
    description: 'Whether to use gRPC or REST'
    required: true
  freshness_timeout_seconds:
    description: 'The number of seconds to wait for the index to become fresh'
    required: false
    default: '60'
  PINECONE_API_KEY:
    description: 'The Pinecone API key'
    required: true

outputs:
  index_name:
    description: 'The name of the index, including randomized suffix'
    value: ${{ steps.create-index.outputs.index_name }}

runs:
  using: 'composite'
  steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python_version }}

    - name: Setup Poetry
      uses: ./.github/actions/setup-poetry
      with:
        include_grpc: ${{ inputs.use_grpc }}
        include_dev: 'true'

    - name: Run data plane tests
      id: data-plane-tests
      shell: bash
      run: poetry run pytest tests/integration/data_asyncio
      env:
        PINECONE_API_KEY: ${{ inputs.PINECONE_API_KEY }}
        USE_GRPC: ${{ inputs.use_grpc }}
        METRIC: ${{ inputs.metric }}
        INDEX_HOST: ${{ inputs.host }}
        DIMENSION: ${{ inputs.dimension }}
        SPEC: ${{ inputs.spec }}
        FRESHNESS_TIMEOUT_SECONDS: ${{ inputs.freshness_timeout_seconds }}
